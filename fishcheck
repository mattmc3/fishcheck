#!/usr/bin/env fish

function _fishcheck__version
    echo "fishcheck - Fish script analysis tool"
    echo "version: 0.0.1"
    echo "license: MIT"
    echo "website: https://github.com/brinysea/fishcheck"
end

function _fishcheck__help
    echo "Usage: fishcheck [OPTIONS...] FILES..."
    echo "  -h, --help                     Show this usage summary and exit"
    echo "  -v, --version                  Print version information"
    echo "  -s, --severity=SEVERITY        Minimum severity for checks (default: error)"
    echo "                                 Severities: error, warning, info, style"
end

function _fishcheck_report
    set -l optspec f/file= c/check= m/message= n/lineno= l/line= S/start= \
        E/end did-you-mean=

    argparse $optspec -- $argv

    set -l checkpat '^FC([EWIS])\d{4}'
    if not string match -rq -- $checkpat $_flag_check
        echo "fishcheck: Report expecting valid check ID with '--check' flag" >&2 && return 1
    end
    set -l check_sevcode (string match -rg -- $checkpat $_flag_check)
    switch $check_sevcode
        case E
            set -f severity error
            set -f check_color (set_color red)
        case W
            set -f severity warning
            set -f check_color (set_color yellow)
        case I
            set -f severity info
            set -f check_color (set_color green)
        case S
            set -f severity style
            set -f check_color (set_color blue)
    end

    set -l check_desc (functions -Dv $_flag_check)[5]

    # check:
    echo "$check_color$_flag_check ($severity): $check_desc"(set_color normal)
    # file:
    echo -n "file: $_flag_file"
    if test -n "$_flag_lineno"
        echo -n " (line $_flag_lineno)"
    end
    echo
    # message:
    if set -q _flag_message
        echo "message: $_flag_message"
    end


    # TODO:
    # echo
    # echo
    # echo "TODO---------------------"
    # echo "file: $_flag_file"
    # echo "check: $_flag_check"
    # echo "message: $_flag_message"
    # echo "line: $_flag_line"
    # echo "start/end: $_flag_start / $_flag_end"
    echo
end

function fishcheck
    set -l fishcheck_version 0.0.1
    set -l optspec h/help v/version s/severity=
    argparse --name fishcheck $optspec -- $argv
    or return 1

    if set -q _flag_version
        _fishcheck__version && return
    else if set -q _flag_help
        _fishcheck__help && return
    else if test (count $argv) -eq 0
        echo "fishcheck: No files specified. 'fishcheck -h' for help." >&2 && return 1
    end

    set -l checkfuncs
    for checkfile in (path resolve (status dirname))/checks/*.fish
        source $checkfile
        set -l checkfuncs (path change-extension '' (path basename $checkfile))
        test $checkfuncs != FCE1000 || continue
        set --append checkfuncs (path change-extension '' (path basename $checkfile))
    end

    # We always run FCE1000, but skip other checks on broken Fish files
    set --local parsable_fishfile
    for fishfile in $argv
        FCE1000 $fishfile
        test $status -eq 0 && set --append parsable_fishfile $fishfile
    end

    for fishfile in $parsable_fishfile
        for checkfunc in $checkfuncs
            $checkfunc $fishfile
        end
    end
end

fishcheck $argv
